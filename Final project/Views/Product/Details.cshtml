@using Final_project.ViewModel.Customer
@model ProductsVM
@{
    ViewData["Title"] = "Shop Online";
    Layout = "_LandingAmazonPage";
}

<link href="/css/customerProductDetails.css" rel="stylesheet" />

<partial name="~/Views/Shared/_SideBarMenu.cshtml" />


<div class="container mt-4">
    <div class="row">
        <!-- Product Images -->

        <div class="col-md-5">
            <div id="productImageCarousel" class="carousel slide" data-bs-ride="carousel">
                <!-- Indicators -->
                <div class="carousel-indicators">
                    @for (int i = 0; i < Model.ExistingImages.Count; i++)
                    {
                        <button type="button" data-bs-target="#productImageCarousel" data-bs-slide-to="@i"
                                class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "")"
                                aria-label="Slide @(i + 1)"></button>
                    }
                </div>

                <!-- Slides - Removed h-75 classes and added fixed height with proper image containment -->
                <div class="carousel-inner" style="height: 400px; background-color: #f8f9fa;">
                    @for (int i = 0; i < Model.ExistingImages.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "") h-100">
                            @if (!string.IsNullOrEmpty(Model.ExistingImages[i].image_url))
                            {
                                <img src="/Image/@Model.ExistingImages[i].image_url"
                                     class="d-block mx-auto h-100"
                                     style="object-fit: contain; max-width: 100%;"
                                     alt="@Model.name">
                            }
                            else
                            {
                                <img src="https://www.shorekids.co.nz/wp-content/uploads/2014/08/ig-placeholder-500.jpg"
                                     class="d-block mx-auto h-100"
                                     style="object-fit: contain; max-width: 100%;"
                                     alt="No image available">
                            }
                        </div>
                    }
                </div>

                <!-- Controls -->
                <button class="carousel-control-prev" type="button" data-bs-target="#productImageCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productImageCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>

            <!-- Thumbnail Navigation - Removed row margins and adjusted spacing -->
            <div class="d-flex flex-wrap gap-2 mt-2">
                @for (int i = 0; i < Model.ExistingImages.Count; i++)
                {
                    <div class="flex-grow-0" style="width: calc(25% - 8px);">
                        @if (!string.IsNullOrEmpty(Model.ExistingImages[i].image_url))
                        {
                            <img src="/Image/@Model.ExistingImages[i].image_url"
                                 class="img-thumbnail cursor-pointer w-100"
                                 style="height: 150px; object-fit: cover;"
                                 onclick="$('#productImageCarousel').carousel(@i)"
                                 alt="Thumbnail @(i + 1)">
                        }
                        else
                        {
                            <img src="https://www.shorekids.co.nz/wp-content/uploads/2014/08/ig-placeholder-500.jpg"
                                 class="img-thumbnail cursor-pointer w-100"
                                 style="height: 80px; object-fit: cover;"
                                 onclick="$('#productImageCarousel').carousel(@i)"
                                 alt="No thumbnail available">
                        }
                    </div>
                }
            </div>
        </div>
        <!-- Product Info -->
        <div class="col-md-7">
            <div class="card mb-4">
                <div class="card-body">
                    <h1 class="card-title">@Model.name</h1>
                    <input type="hidden" name="id" id="productId" value="@Model.id">

                    <div class="mb-2">
                        <span class="text-muted">Brand:</span>
                        <span class="text-dark fw-bold">@Model.Brand</span>
                    </div>

                    <div class="mb-3">
                        @{
                            int fullStars = (int)Model.rating;
                            bool hasHalfStar = Model.rating - fullStars >= 0.5;
                        }
                        <div class="d-flex align-items-center">
                            <div class="text-warning">
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                                @if (hasHalfStar)
                                {
                                    <i class="fas fa-star-half-alt"></i>
                                }
                                @for (int i = 0; i < 5 - fullStars - (hasHalfStar ? 1 : 0); i++)
                                {
                                    <i class="far fa-star"></i>
                                }
                            </div>
                            <a href="#reviews" class="ml-2">@Model.ReviewsCount ratings</a>
                        </div>
                    </div>

                    <hr>

                    <div class="mb-3">
                        @if (Model.discount_price.HasValue && Model.discount_price < Model.price)
                        {
                            <span class="text-danger fw-bold">$@Model.discount_price?.ToString("0.00")</span>
                            <span class="text-muted text-decoration-line-through ms-2">$@Model.price?.ToString("0.00")</span>
                        }
                        else
                        {
                            <span class="text-danger fw-bold">$@Model.price?.ToString("0.00")</span>
                        }
                    </div>

                    @if (Model.stock_quantity >= 1)
                    {
                        <div class="text-success mb-3">
                            <i class="fas fa-check-circle"></i> In Stock
                        </div>
                    }
                    else
                    {
                        <div class="text-danger mb-3">
                            <i class="fas fa-times-circle"></i> Out of Stock
                        </div>
                    }

                    <!-- Size Selection -->
                    @if (Model.SelectedSizes != null && Model.SelectedSizes.Any())
                    {
                        <div class="mb-3">
                            <h6>Size</h6>
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                @foreach (var size in Model.SelectedSizes)
                                {
                                    <label class="btn btn-outline-secondary">
                                        <input type="radio" name="size" autocomplete="off" data-size="@size"> @size
                                    </label>
                                }
                            </div>
                            <input type="hidden" id="selectedSize" name="size">
                        </div>
                    }

                    <!-- Color Selection -->
                    @if (Model.SelectedColors != null && Model.SelectedColors.Any())
                    {
                        <div class="mb-3">
                            <h6>Color</h6>
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                @foreach (var color in Model.SelectedColors)
                                {
                                    <label class="btn btn-outline-secondary" style="background-color: @color" title="@color">
                                        <input type="radio" name="color" autocomplete="off" data-color="@color">
                                    </label>
                                }
                            </div>
                            <input type="hidden" id="selectedColor" name="color">
                        </div>
                    }

                    <div class="mb-3">
                        <label for="quantity">Quantity:</label>
                        <select id="quantity" class="form-control w-auto">
                            @for (int i = 1; i <= Model.stock_quantity; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>

                    <div class="d-flex flex-wrap gap-2 mb-3">
                        <button class="btn btn-warning flex-grow-1" id="buyProduct">
                            <i class="fas fa-bolt"></i> Buy Now
                        </button>
                        <button class="btn btn-outline-secondary flex-grow-1 product-btn-cart dynamicCart" data-id="@Model.id">
                            <i class="fas fa-shopping-cart"></i> Add to Cart
                        </button>
                    </div>

                    <button class="btn btn-outline-danger wishlist-btn" data-id="@Model.id">
                        <i class="far fa-heart"></i> Add to Wishlist
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Description -->
    <div class="card mb-4">
        <div class="card-body">
            <h2 class="card-title">Product Description</h2>
            <p class="card-text">@Model.description</p>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="card mb-4" id="reviews">
        <div class="card-body">
            <h2 class="card-title mb-4">Customer Reviews</h2>

            <!-- Reviews Summary -->
            <div class="row mb-4">
                <div class="col-md-4 text-center mb-3 mb-md-0">
                    <div class="display-4">@Model.rating?.ToString("0.0")</div>
                    <div class="text-warning mb-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Model.rating)
                            {
                                <i class="fas fa-star"></i>
                            }
                            else if (i - 0.5 <= Model.rating)
                            {
                                <i class="fas fa-star-half-alt"></i>
                            }
                            else
                            {
                                <i class="far fa-star"></i>
                            }
                        }
                    </div>
                    <div>@Model.ReviewsCount customer reviews</div>
                </div>

                <div class="col-md-8">
                    @for (int i = 5; i >= 1; i--)
                    {
                        var percentage = Model.ReviewsCount > 0 ?
                        (Model.reviews.Count(r => r.rating == i) * 100 / Model.ReviewsCount) : 0;

                        <div class="row align-items-center mb-2">
                            <div class="col-2 text-end">
                                <span>@i star</span>
                            </div>
                            <div class="col-8">
                                <div class="progress" style="height: 20px;">
                                    <div class="progress-bar bg-warning" role="progressbar" style="width: @percentage%"></div>
                                </div>
                            </div>
                            <div class="col-2">
                                <span>@percentage%</span>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Reviews List -->
            <div class="mb-4">
                @foreach (var review in Model.reviews)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-2">
                                <h5 class="card-title mb-0">@review.User?.UserName</h5>
                                <small class="text-muted">@review.created_at?.ToString("MMMM dd, yyyy")</small>
                            </div>
                            <div class="text-warning mb-2">
                                @for (int i = 1; i <= review.rating; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                            </div>
                            <h6>@review.title</h6>
                            <p class="card-text">@review.comment</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Add Review Form -->
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Write a Review</h3>
                    <form id="reviewForm" method="post" action="/Product/addReview">
                        <input type="hidden" name="product_id" value="@Model.id">

                        <div class="form-group mb-3">
                            <label>Rating</label>
                            <div class="rating-input">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="far fa-star text-warning" data-rating="@i" style="cursor: pointer; font-size: 1.5rem;"></i>
                                }
                                <input type="hidden" name="rating" id="ratingValue" required>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label for="reviewTitle">Review Title</label>
                            <input type="text" class="form-control" id="reviewTitle" name="title" placeholder="Summarize your review" required>
                        </div>

                        <div class="form-group mb-3">
                            <label for="reviewText">Your Review</label>
                            <textarea class="form-control" id="reviewText" name="comment" rows="5" placeholder="Share your experience with this product" required></textarea>
                        </div>

                        <button type="submit" class="btn btn-warning">Submit Review</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Recommended Products -->
    @if (Model.RecommendedProducts != null && Model.RecommendedProducts.Any())
    {
        <div class="mb-5">
            <h2 class="mb-4">Recommended For You</h2>
            <div id="recommendedCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @{
                        var chunkSize = 4;
                        var chunks = Model.RecommendedProducts.Select((x, i) => new { Index = i, Value = x })
                        .GroupBy(x => x.Index / chunkSize)
                        .Select(x => x.Select(v => v.Value).ToList())
                        .ToList();
                    }

                    @for (int i = 0; i < chunks.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <div class="row">
                                @foreach (var product in chunks[i])
                                {
                                    <div class="col-md-3 mb-4">
                                        <div class="card h-100 position-relative">
                                            <!-- Sale Badge - Only shows if there's a discount -->
                                            @if (product.discount_price.HasValue && product.discount_price < product.price)
                                            {
                                                <span class="start-0 translate-middle-y bg-warning text-white px-2 py-1 rounded-end"
                                                      style="z-index: 1; font-size: 0.8rem; position:absolute;top:21px">
                                                    SALE
                                                    @{
                                                        var discountPercent = (int)(100 - (product.discount_price / product.price) * 100);
                                                    }
                                                    @discountPercent% OFF
                                                </span>
                                            }

                                            <!-- Wishlist and Cart Icons -->
                                            <div class="position-absolute end-0 top-0 p-2" style="z-index: 1;">
                                                <button class="btn btn-sm btn-outline-secondary rounded-circle me-1 wishlist-btn"
                                                        title="Add to wishlist"
                                                        data-id="@product.id">
                                                    <i class="far fa-heart"></i>
                                                </button>
                                                <button class="btn btn-sm btn-warning rounded-circle product-btn-cart"
                                                        title="Add to cart"
                                                        data-id="@product.id">
                                                    <i class="fas fa-shopping-cart"></i>
                                                </button>
                                            </div>

                                            <a href="/Product/Details/@product.id" class="text-decoration-none text-dark">
                                                <img src="/images/@product.image_url" class="card-img-top" alt="@product.name" style="height: 200px; object-fit: contain;">
                                                <div class="card-body">
                                                    <h5 class="card-title" style="height: 50px; overflow: hidden;">@product.name</h5>
                                                    <div class="text-warning mb-2">
                                                        @for (int j = 1; j <= 5; j++)
                                                        {
                                                            if (j <= product.rating)
                                                            {
                                                                <i class="fas fa-star"></i>
                                                            }
                                                            else if (j - 0.5 <= product.rating)
                                                            {
                                                                <i class="fas fa-star-half-alt"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="far fa-star"></i>
                                                            }
                                                        }
                                                    </div>
                                                    <div>
                                                        @if (product.discount_price.HasValue && product.discount_price < product.price)
                                                        {
                                                            <span class="text-danger fw-bold">$@product.discount_price?.ToString("0.00")</span>
                                                            <span class="text-muted text-decoration-line-through ms-2">$@product.price?.ToString("0.00")</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-danger fw-bold">$@product.price?.ToString("0.00")</span>
                                                        }
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>

                <button class="carousel-control-prev" type="button" data-bs-target="#recommendedCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon bg-dark rounded-circle" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#recommendedCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon bg-dark rounded-circle" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
    }

</div>
<!-- Back to Top Button -->
<partial name="_BackToTopBtn" />

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
<partial name="Tostar" />

<script>
      $(document).ready(function() {
        var isAuth=@(User.Identity.IsAuthenticated ? "true" : "false");
        if(isAuth){
             $.ajax({
               url: "/Landing/CartCount",
               type: "post",
               data: {
                  UserName: '@User.Identity.Name',
               },
               success: function (result) {
                   console.log("cart results:", result);
                   UpdateCartValue(result)
               },
               error: function (xhr, status, error) {
                   console.error("cart error:", error);
               }
            });
        }


            let searchTimeout;

            $('#searchInput').on('input', function() {
                const searchTerm = $(this).val();

                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    if (searchTerm.length > 2) {
                        $.ajax({
                            url: "/Landing/Search",
                            type: "GET",
                            data: {
                               query: searchTerm,
                               pageSize: 10,
                               pageNumber: 1
                            },
                            beforeSend: function() {
                                showSearchLoading();
                            },
                            success: function (result) {
                                console.log("Search results:", result);
                                displaySearchResults(result);
                            },
                            error: function (xhr, status, error) {
                                console.error("Search error:", error);
                                showSearchError();
                            },
                            complete: function() {
                                hideSearchLoading();
                            }
                        });
                    } else {
                        clearSearchResults();
                    }
                }, 300);
            });

            // Hide search results when clicking outside
            $(document).on('click', function(e) {
                if (!$(e.target).closest('.search-container').length) {
                    hideSearchResults();
                }
            });

            // Show search results when clicking on input (if there are results)
            $('#searchInput').on('click', function() {
                if ($('#searchResults .search-results').length > 0) {
                    showSearchResults();
                }
            });
        });


    function UpdateCartValue(number) {
            $('#cartCounter').text(number);
        }
    function changeMainImage(thumbnail) {
        const mainImage = document.getElementById('mainImage');
        if (mainImage && thumbnail && thumbnail.src) {
            mainImage.src = thumbnail.src;
        } else {
            toastr.error('Image elements not found');
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        toastr.options = {
            closeButton: true,
            progressBar: true,
            positionClass: 'toast-top-right',
            timeOut: 3000
        };

        var cart_value=$('#cartCounter').text();
        console.log(cart_value);

        // Size selection
        document.querySelectorAll('input[name="size"]').forEach(radio => {
            radio.addEventListener('change', function() {
                document.getElementById('selectedSize').value = this.getAttribute('data-size');
            });
        });

        // Color selection
        document.querySelectorAll('input[name="color"]').forEach(radio => {
            radio.addEventListener('change', function() {
                document.getElementById('selectedColor').value = this.getAttribute('data-color');
            });
        });

           // Add to cart button
    $('.product-btn-cart').each(function(){
             $(this).click(function () {
                 const productId= $(this).data("id");
                  const size = document.getElementById('selectedSize')?.value;
                 const color = document.getElementById('selectedColor')?.value;
            $.ajax({
                url: `/Cart/AddToCart?productId=${productId}&color=${color}&size=${size}`,
                type: "POST",
                success: function (response) {
                     toastr.success('Item added to cart successfully');
                     UpdateCartValue(response)

                },
                error: function () {
                    toastr.error('An error occurred while adding item to cart');
                }
            });
        });
    })


          // Add to WishList
    $('.wishlist-btn').each(function(){
             $(this).click(function () {
                 const productId= $(this).data("id");

            $.ajax({
                url: `/Wishlist/AddToWishlist?productId=${productId}`,
                success: function (response) {
                    toastr.success('Item added to wishlist successfully');
                },
                error: function () {
                    toastr.error('An error occurred while adding item to wishlist');
                }
            });
        });

    })




        // Buy now button
        document.getElementById('buyProduct').addEventListener('click', function() {
            const quantity = document.getElementById('quantity').value;
            const productId = document.getElementById('productId').value;
            const size = document.getElementById('selectedSize')?.value;
            const color = document.getElementById('selectedColor')?.value;

            if (quantity && productId) {
                let url = `/Product/CheckOut?productId=${productId}&quantity=${quantity}`;
                if (size) url += `&size=${encodeURIComponent(size)}`;
                if (color) url += `&color=${encodeURIComponent(color)}`;
                window.location.href = url;
            } else {
                toastr.error('Product information missing', { timeOut: 1500 });
            }
        });

        // Rating stars selection
        document.querySelectorAll('.rating-input i').forEach(star => {
            star.addEventListener('click', function() {
                const rating = parseInt(this.getAttribute('data-rating'));
                document.getElementById('ratingValue').value = rating;

                // Update star display
                const stars = document.querySelectorAll('.rating-input i');
                stars.forEach((s, index) => {
                    if (index < rating) {
                        s.classList.remove('far');
                        s.classList.add('fas');
                    } else {
                        s.classList.remove('fas');
                        s.classList.add('far');
                    }
                });
            });
        });

        // Review form submission
        document.getElementById('reviewForm').addEventListener('submit', function(e) {
            if (!document.getElementById('ratingValue').value) {
                e.preventDefault();
                toastr.error('Please select a rating', { timeOut: 1500 });
            }
        });



        // Initialize Bootstrap carousel
        if (document.getElementById('recommendedCarousel')) {
            const carousel = new bootstrap.Carousel('#recommendedCarousel', {
                interval: 5000,
                wrap: true
            });
        }
    });
</script>