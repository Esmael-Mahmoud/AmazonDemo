@using Final_project.ViewModel.CustomerService
@model ChatDetailsViewModel
@{
    ViewData["Title"] = $"Chat - {Model.Session.CustomerName} & {Model.Session.SellerName}";
}

@section Styles {
    <link rel="stylesheet" href="~/css/CustomerService.css" asp-append-version="true" />
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Chats")">Chat Sessions</a></li>
                    <li class="breadcrumb-item active">@Model.Session.CustomerName & @Model.Session.SellerName</li>
                </ol>
            </nav>

            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-comments"></i>
                        @Model.Session.CustomerName ↔ @Model.Session.SellerName
                    </h5>
                    <span class="badge bg-@(Model.Session.Status == "Active" ? "success" : "secondary")">
                        @Model.Session.Status
                    </span>
                </div>
                <div class="card-body p-0">
                    <!-- Chat Messages -->
                    <div id="chat-messages" class="p-3" style="height: 500px; overflow-y: auto; background-color: #f8f9fa;">
                        @if (Model.Messages.Any())
                        {
                            @foreach (var message in Model.Messages.OrderBy(m => m.SentAt))
                            {
                                <div class="message mb-3 @(message.IsFromCurrentUser ? "text-end" : "")">
                                    <div class="d-inline-block p-3 rounded @(message.IsFromCurrentUser ? "bg-primary text-white" : "bg-white border")" style="max-width: 70%;">
                                        <div>@message.Message</div>
                                        <small class="@(message.IsFromCurrentUser ? "text-white-50" : "text-muted")">
                                            @message.SenderName - @message.SentAt?.ToString("HH:mm")
                                        </small>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center text-muted">
                                <i class="fas fa-comments fa-2x mb-2"></i>
                                <p>No messages yet. Start the conversation!</p>
                            </div>
                        }
                    </div>

                    <!-- Message Input -->
                    @if (Model.Session.Status == "Active")
                    {
                        <div class="border-top p-3">
                            <form id="chatMessageForm" asp-action="SendChatMessage" method="post" data-session-id="@Model.Session.Id" data-sender-id="@Model.CurrentUserId">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="SessionId" value="@Model.Session.Id" />
                                <div class="input-group">
                                    <input type="text" id="chatMessage" name="Message" class="form-control" placeholder="Type your message..." required />
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-paper-plane"></i> Send
                                    </button>
                                </div>
                            </form>
                        </div>
                    }
                    else
                    {
                        <div class="border-top p-3 text-center text-muted">
                            <i class="fas fa-lock"></i> This chat session has been closed.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/CustomerServiceNotifications.js"></script>
    <script src="~/js/CustomerServiceJS.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set current user ID for real-time functionality
            setCurrentUserId('@Model.CurrentUserId');

            // Join chat session for real-time updates
            joinChatSession('@Model.Session.Id');

            // Auto-scroll to bottom of chat
            const chatMessages = document.getElementById('chat-messages');
            if (chatMessages) {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        });
    </script>
}