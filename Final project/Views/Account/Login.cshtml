@model LoginDataVM
@{
    ViewData["Title"] = "Login";
    Layout = "_AccountPageLayout";

}
<!-- Logo -->
<div class="logo-container">
    <div class="logo">
        <i class="fa-brands fa-amazon fa-3x"></i>
    </div>
</div>

<!-- E-commerce Icons -->
<div class="ecommerce-icons">
    <i class="fas fa-shipping-fast ecommerce-icon"></i>
    <i class="fas fa-shield-alt ecommerce-icon"></i>
    <i class="fas fa-medal ecommerce-icon"></i>
</div>

<!-- Google Login Button -->
<form asp-action="ExternalLogin" asp-controller="Account" asp-route-returnUrl="/Switch/Index" method="post">
    <input type="hidden" name="provider" value="Google" />
    <button type="submit" class="btn btn-google">
        <svg class="google-icon" viewBox="0 0 24 24">
            <path fill="#4285F4"
                  d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" />
            <path fill="#34A853"
                  d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" />
            <path fill="#FBBC05"
                  d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" />
            <path fill="#EA4335"
                  d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" />
        </svg>
        Continue with Google
    </button>
</form>
<!-- Divider -->
<div class="divider">
    <span>or create account with email</span>
</div>


<!-- Login Form -->
<form id="loginForm" method="post" asp-action="Login" asp-controller="Account">
    <span asp-validation-for="@Model.Email" class="text-danger"></span>
    <div class="form-group">
        <input type="email"
               class="form-control"
               id="email"
               asp-for="@Model.Email"
               placeholder="Email Address"
               required />
        <i class="fas fa-envelope input-icon"></i>
    </div>

    <span asp-validation-for="@Model.Password" class="text-danger"></span>
    <div class="form-group">
        <input type="password"
               class="form-control"
               id="password"
               asp-for="@Model.Password"
               placeholder="Password"
               required />
        <i class="fas fa-eye password-toggle"
           onclick="togglePassword('password', this)"></i>
    </div>

    <div class="remember-me">
        <div class="form-check">
            <input class="form-check-input"
                   type="checkbox"
                   id="rememberMe"
                   asp-for="@Model.RememberMe" />
            <label class="form-check-label" for="rememberMe">
                Remember me
            </label>
        </div>
        <div class="forgot-password">
            <a href="#">Forgot password?</a>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">
        <div class="loading-spinner" id="loadingSpinner"></div>
        Sign In
    </button>
</form>

<!-- Sign Up Link -->
<div class="signup-link">
    Don't have an account?
    <a asp-action="Register" asp-controller="Account">Create Account</a>
</div>


@section Scripts {
    <script>
        // Create floating particles
        function createParticles() {
          const particlesContainer = document.getElementById("particles");
          const particleCount = 60;

          for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement("div");
            particle.className = "particle";
            particle.style.left = Math.random() * 100 + "%";

            // Start particles at random positions across the screen
            particle.style.top = Math.random() * 100 + "vh";

            particle.style.animationDelay = Math.random() * 8 + "s";
            particle.style.animationDuration = Math.random() * 4 + 6 + "s";
            particlesContainer.appendChild(particle);
          }
        }

        // Toggle password visibility
        function togglePassword(fieldId, icon) {
          const passwordField = document.getElementById(fieldId);
          const isPassword = passwordField.type === "password";

          // Toggle input type
          passwordField.type = isPassword ? "text" : "password";

          // Toggle icon
          icon.classList.toggle("fa-eye");
          icon.classList.toggle("fa-eye-slash");
        }

        // Handle Google Login
        function handleGoogleLogin() {
          const btn = event.target;
          const originalContent = btn.innerHTML;
          btn.innerHTML = `
            <svg class="google-icon" viewBox="0 0 24 24">
              <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
              <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
              <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
              <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
            Connecting...
          `;
          btn.disabled = true;

          // Simulate Google login process
          setTimeout(() => {
            alert(
              "Google login would be implemented here with actual Google OAuth API"
            );
            btn.innerHTML = originalContent;
            btn.disabled = false;
          }, 2000);
        }

        // Handle form submission

        // Add input animation effects
        document.querySelectorAll(".form-control").forEach((input) => {
          input.addEventListener("focus", function () {
            this.parentElement.classList.add("focused");
          });

          input.addEventListener("blur", function () {
            this.parentElement.classList.remove("focused");
          });
        });

        // Initialize particles when page loads
        window.addEventListener("load", createParticles);

        // Add smooth scrolling for better mobile experience
        document.addEventListener("DOMContentLoaded", function () {
          // Add touch-friendly interactions
          const buttons = document.querySelectorAll(".btn");
          buttons.forEach((button) => {
            button.addEventListener("touchstart", function () {
              this.style.transform = "scale(0.95)";
            });

            button.addEventListener("touchend", function () {
              this.style.transform = "";
            });
          });
        });
    </script>

}