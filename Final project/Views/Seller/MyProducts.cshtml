@model IEnumerable<Final_project.Models.product>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categoriesDict = ViewBag.CategoriesDict as Dictionary<string, string>;
}

@functions {
    public static string RenderColors(string colors)
    {
        if (string.IsNullOrWhiteSpace(colors))
            return "<span class='text-muted'>No Colors</span>";
        var colorList = colors.Split(',', ';').Select(c => c.Trim()).Where(c => !string.IsNullOrEmpty(c)).ToList();
        if (!colorList.Any())
            return "<span class='text-muted'>No Colors</span>";
        var html = "<div style='display:flex; flex-direction:column; gap:2px;'>";
        for (int i = 0; i < colorList.Count; i += 3)
        {
            var rowColors = colorList.Skip(i).Take(3);
            html += "<div style='display:flex; justify-content:center; gap:4px;'>";
            foreach (var color in rowColors)
            {
                html += $"<span title='{color}' style='display:inline-block; width:18px; height:18px; border-radius:50%; background:{color}; border:1px solid #ccc;'></span>";
            }
            html += "</div>";
        }
        html += "</div>";
        return html;
    }
}

<style>
    :root {
        --amazon-orange: #ff9900;
        --amazon-blue: #232f3e;
        --amazon-light: #37475a;
        --amazon-dark: #131921;
        --success-green: #00853e;
        --info-blue: #0073bb;
        --warning-orange: #b12704;
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
    }

    body {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 25%, #3498db 50%, #2980b9 75%, #1e3c72 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        position: relative;
        overflow-x: hidden;
        margin: 0;
        padding: 0;
    }

    .container-fluid, .container {
        background: transparent;
        padding: 2rem;
    }

    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at 20% 80%, rgba(52, 73, 94, 0.4) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(52, 152, 219, 0.3) 0%, transparent 50%), radial-gradient(circle at 40% 40%, rgba(41, 128, 185, 0.2) 0%, transparent 50%);
        pointer-events: none;
        z-index: -1;
    }

    .container {
        background: transparent;
        backdrop-filter: none;
        border: none;
        border-radius: 0;
        padding: 2rem;
        margin: 0;
        box-shadow: none;
    }

    .btn {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        padding: 12px 24px;
        border-radius: 25px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            color: white;
        }

    .btn-success {
        background: linear-gradient(135deg, var(--success-green) 0%, #00a854 100%);
        border: none;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--amazon-orange) 0%, #ff7700 100%);
        border: none;
    }

    .btn-warning {
        background: linear-gradient(135deg, var(--warning-orange) 0%, #e67e22 100%);
        border: none;
    }

    .btn-danger {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        border: none;
    }

    .btn-info {
        background: linear-gradient(135deg, var(--info-blue) 0%, #0056b3 100%);
        border: none;
    }

    .form-control {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        padding: 12px 16px;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--amazon-orange);
            box-shadow: 0 0 0 3px rgba(255, 153, 0, 0.2);
            background: rgba(255, 255, 255, 0.15);
            color: white;
        }

        .form-control option {
            background: var(--amazon-dark);
            color: white;
        }

    /* Table Styling */
    .products-table-container {
        background: rgba(255, 255, 255, 0.12);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .products-table-container:hover {
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    .table {
        margin: 0;
        background: transparent;
        border: none;
        width: 100%;
    }

        .table thead {
            background: #131921; /* Same dark color as AllProducts */
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
        }

        .table th {
            color: #0073bb !important; /* Blue color for headers like in AllProducts */
            font-weight: 600;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 12px 16px;
            text-align: center;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border: none;
            position: relative;
            background: transparent;
        }

        /* Override any existing table header styles */
        .table thead th,
        .table thead tr th {
            color: #0073bb !important;
        }

        .table th::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 20%;
            right: 20%;
            height: 2px;
            background: linear-gradient(90deg, transparent, var(--amazon-orange), transparent);
            opacity: 0;
            transition: opacity 0.3s;
        }

        .table th:hover::after {
            opacity: 1;
        }

        .table td {
            color: white !important;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 12px 16px;
            vertical-align: middle;
            text-align: center;
            font-size: 0.9rem;
            border-left: none;
            border-right: none;
            position: relative;
            background: transparent;
        }

    /* Category name styling */
    .category-name {
        color: var(--amazon-orange) !important; /* Primary orange color */
        font-weight: 600;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .table tbody tr {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: none;
        background: transparent;
    }

        .table tbody tr:hover {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            transform: scale(1.01);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

    .category-header {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        margin: 1rem 0;
    }

        .category-header td {
            color: var(--amazon-orange) !important;
            font-weight: 700;
            font-size: 1rem;
            text-align: center;
            padding: 12px 16px;
            position: relative;
            background: transparent;
        }

    /* Product Image Styling */
    .product-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 12px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
    }

        .product-image:hover {
            transform: scale(1.1);
            border-color: var(--amazon-orange);
            box-shadow: 0 8px 25px rgba(255, 153, 0, 0.3);
        }

    /* Action Buttons in Table */
    .action-btn {
        background: #131921; /* Dark navbar color */
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        padding: 8px 16px;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.85rem;
        margin: 0.25rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }

        .action-btn:hover {
            background: #232f3e; /* Slightly lighter on hover */
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            text-decoration: none;
        }

        .action-btn.edit {
            color: #0073bb !important; /* Professional blue for edit */
        }

            .action-btn.edit:hover {
                color: #005a8b !important; /* Darker blue on hover */
                background: #1a2532;
            }

        .action-btn.delete {
            color: #dc3545 !important; /* Professional red for delete */
        }

            .action-btn.delete:hover {
                color: #c82333 !important; /* Darker red on hover */
                background: #1a2532;
            }

    .form-control {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        padding: 12px 16px;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--amazon-orange);
            box-shadow: 0 0 0 3px rgba(255, 153, 0, 0.2);
            background: rgba(255, 255, 255, 0.15);
        }

        .form-control option {
            background: var(--amazon-dark);
            color: white;
        }

    .form-label {
        color: white;
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

    .filter-section {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .page-header {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        padding: 2rem;
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .page-title {
        color: white;
        font-size: 2.5rem;
        font-weight: 800;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
    }

    .btn-sm {
        padding: 8px 16px;
        font-size: 0.85rem;
        border-radius: 20px;
    }

    .color-dot {
        display: inline-block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        border: 2px solid rgba(255, 255, 255, 0.3);
        margin: 2px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .status-badge {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

        .status-badge.approved {
            background: linear-gradient(135deg, var(--success-green) 0%, #00a854 100%);
            border: none;
        }

        .status-badge.pending {
            background: linear-gradient(135deg, var(--warning-orange) 0%, #e67e22 100%);
            border: none;
        }

        .status-badge.active {
            background: linear-gradient(135deg, var(--info-blue) 0%, #0056b3 100%);
            border: none;
        }

        .status-badge.inactive {
            background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);
            border: none;
        }

    .badge {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        font-weight: 600;
    }

        .badge.bg-light {
            background: rgba(255, 255, 255, 0.9) !important;
            color: var(--amazon-dark) !important;
            border: 1px solid rgba(255, 255, 255, 0.5);
        }

        .badge.bg-secondary {
            background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%) !important;
            border: none;
        }

    .d-flex {
        display: flex !important;
    }

    .gap-2 {
        gap: 0.5rem !important;
    }

    .justify-content-center {
        justify-content: center !important;
    }

    .align-items-center {
        align-items: center !important;
    }

    .w-100 {
        width: 100% !important;
    }

    .me-2 {
        margin-right: 0.5rem !important;
    }

    .me-3 {
        margin-right: 1rem !important;
    }

    .ms-2 {
        margin-left: 0.5rem !important;
    }

    .mb-3 {
        margin-bottom: 1rem !important;
    }

    .g-3 {
        gap: 1rem !important;
    }

    .align-items-end {
        align-items: end !important;
    }

    .text-center {
        text-align: center !important;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -0.5rem;
        margin-left: -0.5rem;
    }

    .col-md-2 {
        flex: 0 0 auto;
        width: 16.666667%;
        padding-right: 0.5rem;
        padding-left: 0.5rem;
    }

    @@media (max-width: 768px) {
        .col-md-2 {
            width: 100%;
            margin-bottom: 1rem;
        }

        .page-header {
            flex-direction: column;
            gap: 1rem;
        }

        .action-buttons {
            flex-direction: column;
            width: 100%;
        }

            .action-buttons .btn {
                width: 100%;
            }
    }

    h1, h2, h3, h4, h5, h6 {
        color: white;
    }

    .text-muted {
        color: rgba(255, 255, 255, 0.6) !important;
        font-style: italic;
    }

    strong {
        color: white !important;
    }

    span {
        color: white;
    }

    div {
        color: white;
    }

    p {
        color: white;
    }

    td {
        color: white !important;
    }

    th {
        color: white !important;
    }

    tr {
        color: white;
    }

    a {
        color: white;
    }

    label {
        color: white;
    }

    small {
        color: white;
    }

    i {
        color: white;
    }

    img {
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    hr {
        border-color: rgba(255, 255, 255, 0.2);
    }

    input {
        color: white;
    }

    select {
        color: white;
    }

    textarea {
        color: white;
    }

    button {
        color: white;
    }

    option {
        color: white;
    }

    li {
        color: white;
    }

    ul {
        color: white;
    }

    ol {
        color: white;
    }

    b {
        color: white;
    }

    em {
        color: white;
    }

    mark {
        color: white;
    }

    code {
        color: white;
    }

    pre {
        color: white;
    }

    kbd {
        color: white;
    }

    samp {
        color: white;
    }

    .thead-dark {
        background: rgba(255, 255, 255, 0.15) !important;
        backdrop-filter: blur(10px);
    }

        .thead-dark th {
            color: white !important;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

    /* //pagination */
    .pagination {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 10px 20px;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }

    .page-item .page-link {
        background-color: rgba(255, 255, 255, 0.15);
        border: none;
        color: white;
        margin: 0 5px;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

        .page-item .page-link:hover {
            background-color: rgba(255, 255, 255, 0.25);
        }

    .page-item.active .page-link {
        background-color: rgba(255, 255, 255, 0.4);
        color: black;
        font-weight: bold;
    }

    .page-item.disabled .page-link {
        pointer-events: none;
        opacity: 0.4;
    }
</style>

<!-- Center My Products title and move buttons below -->
<div class="page-header flex-column align-items-center text-center" style="gap: 0;">
    <h1 class="page-title w-100 text-center">
        <i class="fas fa-box me-3"></i>My Products
    </h1>
    <div class="row w-100 justify-content-center mt-3">
        <div class="col-auto">
            <a asp-action="AddProduct" class="btn btn-success">
                <i class="fas fa-plus me-2"></i>Add Product
            </a>
        </div>
        <div class="col-auto">
            <a href="/Seller/AllProducts" class="btn btn-info">
                <i class="fas fa-database me-2"></i>View All Products
            </a>
        </div>
    </div>
</div>
<!-- Filter section with button on the right -->
<div class="filter-section">
    <form method="get">
        <div class="row g-3 align-items-end">
            <div class="col-md-2">
                <label class="form-label">Product Name</label>
                <input type="text" name="searchName" value="@ViewBag.SearchName" class="form-control" placeholder="Search products..." />
            </div>
            <div class="col-md-2">
                <label class="form-label">Min Price</label>
                <input type="number" name="minPrice" value="@ViewBag.MinPrice" class="form-control" placeholder="Min Price" step="0.01" />
            </div>
            <div class="col-md-2">
                <label class="form-label">Max Price</label>
                <input type="number" name="maxPrice" value="@ViewBag.MaxPrice" class="form-control" placeholder="Max Price" step="0.01" />
            </div>
            <div class="col-md-2">
                <label class="form-label">Status</label>
                <select name="isActive" class="form-control">
                    <option value="">All Status</option>
                    @if (ViewBag.IsActive != null && ViewBag.IsActive.ToString() == "True")
                    {
                        <option value="true" selected>Active</option>
                    }
                    else
                    {
                        <option value="true">Active</option>
                    }
                    @if (ViewBag.IsActive != null && ViewBag.IsActive.ToString() == "False")
                    {
                        <option value="false" selected>Inactive</option>
                    }
                    else
                    {
                        <option value="false">Inactive</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Category</label>
                <select name="categoryId" class="form-control">
                    <option value="">All Categories</option>
                    @if (ViewBag.CategoriesList != null)
                    {
                        foreach (var cat in ViewBag.CategoriesList)
                        {
                            if (ViewBag.SelectedCategoryId != null && ViewBag.SelectedCategoryId.ToString() == cat.id)
                            {
                                <option value="@cat.id" selected>@cat.name</option>
                            }
                            else
                            {
                                <option value="@cat.id">@cat.name</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="col-md-2 d-flex justify-content-end align-items-end" style="margin-left:auto;">
                <button type="submit" class="btn btn-primary" style="min-width: 120px;">
                    <i class="fas fa-filter me-2"></i>Filter
                </button>
            </div>
        </div>
    </form>
</div>
@* AntiForgeryToken hidden form for AJAX *@
<form id="antiForgeryForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>
@{
    var groupedProducts = Model.GroupBy(item => !string.IsNullOrEmpty(item.category_id) && categoriesDict != null && categoriesDict.ContainsKey(item.category_id) ? categoriesDict[item.category_id] : "No Category");
}
<div class="products-table-container">
    <table class="table table-striped table-bordered table-hover align-middle">
        <thead>
            <tr>
                <th><i class="fas fa-image me-2"></i>Image</th>
                <th><i class="fas fa-tag me-2"></i>Name</th>
                <th><i class="fas fa-info-circle me-2"></i>Description</th>
                <th><i class="fas fa-pound-sign me-2"></i>Price</th>
                <th><i class="fas fa-percentage me-2"></i>Discount</th>
                <th><i class="fas fa-boxes me-2"></i>Stock</th>
                <th><i class="fas fa-copyright me-2"></i>Brand</th>
                <th><i class="fas fa-palette me-2"></i>Colors</th>
                <th><i class="fas fa-ruler me-2"></i>Sizes</th>
                <th><i class="fas fa-barcode me-2"></i>SKU</th>
                <th><i class="fas fa-folder me-2"></i>Category</th>
                <th><i class="fas fa-calendar me-2"></i>Created</th>
                <th><i class="fas fa-toggle-on me-2"></i>Status</th>
                <th><i class="fas fa-check-circle me-2"></i>Approved</th>
                <th><i class="fas fa-cogs me-2"></i>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var group in groupedProducts)
                {
                    <tr class="category-header">
                        <td colspan="15">
                            <i class="fas fa-folder me-2"></i>
                            <span class="category-name">@group.Key</span>
                            <span class="badge bg-light text-dark ms-2">@group.Count() products</span>
                        </td>
                    </tr>
                    foreach (var item in group)
                    {
                        <tr>
                            <td style="text-align:center;vertical-align:middle;">
                                @if (item.product_images != null && item.product_images.Any())
                                {
                                    var mainImage = item.product_images.FirstOrDefault(img => img.image_type == "main");
                                    if (mainImage != null)
                                    {
                                        <img src="@mainImage.image_url" alt="Product Main Image" class="product-image" />
                                    }
                                    else
                                    {
                                        <img src="@item.product_images.First().image_url" alt="Product Image" class="product-image" />
                                    }
                                }
                                else
                                {
                                    <span>No Image</span>
                                }
                            </td>
                            <td>@item.name</td>
                            <td>@item.description</td>
                            <td>@item.price</td>
                            <td>@item.discount_price</td>
                            <td>@item.stock_quantity</td>
                            <td>@item.Brand</td>
                            <td style="text-align:center;">
                                @Html.Raw(RenderColors(item.Colors))
                            </td>
                            <td>@item.Sizes</td>
                            <td>@item.sku</td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.category_id) && categoriesDict != null && categoriesDict.ContainsKey(item.category_id))
                                {
                                    @categoriesDict[item.category_id]
                                }
                                else
                                {
                                    <span>No Category</span>
                                }
                            </td>
                            <td>@item.created_at?.ToString("yyyy-MM-dd")</td>
                            <td>
                                @if (item.is_active == true)
                                {
                                    <span class="status-badge active">
                                        <i class="fas fa-check-circle"></i>Active
                                    </span>
                                }
                                else
                                {
                                    <span class="status-badge inactive">
                                        <i class="fas fa-times-circle"></i>Inactive
                                    </span>
                                }
                            </td>
                            <td>
                                @if (item.is_approved == true)
                                {
                                    <span class="status-badge approved">
                                        <i class="fas fa-check-circle"></i>Approved
                                    </span>
                                }
                                else
                                {
                                    <span class="status-badge pending">
                                        <i class="fas fa-clock"></i>Pending
                                    </span>
                                }
                            </td>
                            <td style="text-align:center;">
                                <div class="d-flex gap-2 justify-content-center align-items-center">
                                    <a asp-action="ProductDetails" asp-route-id="@item.id" class="btn btn-info btn-sm" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="EditProduct" asp-route-id="@item.id" class="btn btn-warning btn-sm" title="Edit Product">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-danger btn-sm delete-product-btn" data-product-id="@item.id" title="Delete Product">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                }
            }
            else
            {
                <tr>
                    <td colspan="15" class="text-center text-muted" style="padding: 3rem;">
                        <i class="fas fa-box-open me-2" style="font-size: 2rem;"></i>
                        <div style="font-size: 1.2rem; margin-top: 1rem;">No products found</div>
                        <div style="font-size: 0.9rem; margin-top: 0.5rem;">Try adjusting your filters or add a new product</div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @* -----------------pagination---------------- *@
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">

            @* ? Always visible, but disabled if no previous page *@
            <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                <a class="page-link" href="@(
                ViewBag.CurrentPage > 1
                    ? Url.Action("MyProducts", new {
                        page = ViewBag.CurrentPage - 1,
                        searchName = ViewBag.SearchName,
                        minPrice = ViewBag.MinPrice,
                        maxPrice = ViewBag.MaxPrice,
                        categoryId = ViewBag.SelectedCategoryId
                    })
                    : "#")">
                    &#x276E;
                </a>
            </li>

            @* Page numbers *@
            @for (int i = 1; i <= ViewBag.totalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("MyProducts", new {
                    page = i,
                    searchName = ViewBag.SearchName,
                    minPrice = ViewBag.MinPrice,
                    maxPrice = ViewBag.MaxPrice,
                    categoryId = ViewBag.SelectedCategoryId
                })">@i</a>
                </li>
            }

            @* ? Always visible, but disabled if no next page *@
            <li class="page-item @(ViewBag.CurrentPage >= ViewBag.totalPages ? "disabled" : "")">
                <a class="page-link" href="@(
                ViewBag.CurrentPage < ViewBag.totalPages
                    ? Url.Action("MyProducts", new {
                        page = ViewBag.CurrentPage + 1,
                        searchName = ViewBag.SearchName,
                        minPrice = ViewBag.MinPrice,
                        maxPrice = ViewBag.MaxPrice,
                        categoryId = ViewBag.SelectedCategoryId
                    })
                    : "#")">&#x276F;</a> @* ? *@
            </li>

        </ul>
    </nav>

</div>

<!-- Toast Success Message -->
<div id="deleteToast" class="toast align-items-center text-bg-success border-0 position-fixed top-0 start-50 translate-middle-x mt-4" role="alert" aria-live="assertive" aria-atomic="true" style="z-index: 9999; min-width: 250px; display:none;">
    <div class="d-flex">
        <div class="toast-body">
            <i class="fas fa-check-circle me-2"></i>Product deleted successfully!
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteProductModal" tabindex="-1" aria-labelledby="deleteProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="background:rgba(30,49,80,0.98); border-radius:18px; border:2px solid var(--amazon-orange);">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteProductModalLabel" style="color:var(--amazon-orange); font-weight:700;"><i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter:invert(1);"></button>
            </div>
            <div class="modal-body text-center" style="color:white;">
                <p style="font-size:1.15rem;">Are you sure you want to delete this product?</p>
                <p class="text-muted" style="font-size:0.95rem;">This action cannot be undone.</p>
            </div>
            <div class="modal-footer border-0 d-flex justify-content-center gap-3">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="min-width:100px;">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteProductBtn" style="min-width:100px;">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var deleteProductId = null;
        var deleteProductRow = null;
        $(document).on('click', '.delete-product-btn', function (e) {
            e.preventDefault();
            deleteProductId = $(this).data('product-id');
            deleteProductRow = $(this).closest('tr');
            var modal = new bootstrap.Modal(document.getElementById('deleteProductModal'));
            modal.show();
        });
        $(document).on('click', '#confirmDeleteProductBtn', function () {
            if (deleteProductId) {
                $.ajax({
                    url: '/Seller/DeleteProductAjax',
                    type: 'POST',
                    data: {
                        id: deleteProductId,
                        __RequestVerificationToken: $('#antiForgeryForm input[name="__RequestVerificationToken"]').first().val()
                    },
                    success: function (result) {
                        if (result.success) {
                            if(deleteProductRow) deleteProductRow.fadeOut(400, function() { $(this).remove(); });
                            var modal = bootstrap.Modal.getInstance(document.getElementById('deleteProductModal'));
                            if(modal) modal.hide();
                            showDeleteToast();
                        }
                    }
                });
            }
        });
        function showDeleteToast() {
            var toast = $('#deleteToast');
            toast.fadeIn(300);
            setTimeout(function() {
                toast.fadeOut(500);
            }, 3000);
        }
    </script>
} 