@model IEnumerable<Final_project.Models.discount>

@{
    ViewData["Title"] = "My Discounts";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedPercentage = ViewBag.DiscountType == "percentage" ? "selected" : "";
    var selectedFixed = ViewBag.DiscountType == "fixed" ? "selected" : "";
    var selectedActive = ViewBag.IsActive != null && ViewBag.IsActive.ToString() == "True" ? "selected" : "";
    var selectedInactive = ViewBag.IsActive != null && ViewBag.IsActive.ToString() == "False" ? "selected" : "";
}

<style>
    :root {
        --amazon-orange: #ff9900;
        --amazon-blue: #232f3e;
        --amazon-light: #37475a;
        --amazon-dark: #131921;
        --success-green: #00853e;
        --info-blue: #0073bb;
        --warning-orange: #b12704;
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
    }

    body {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 25%, #3498db 50%, #2980b9 75%, #1e3c72 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        position: relative;
        overflow-x: hidden;
        margin: 0;
        padding: 0;
    }

    .container-fluid, .container {
        background: transparent;
        padding: 2rem;
    }

    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at 20% 80%, rgba(52, 73, 94, 0.4) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(52, 152, 219, 0.3) 0%, transparent 50%), radial-gradient(circle at 40% 40%, rgba(41, 128, 185, 0.2) 0%, transparent 50%);
        pointer-events: none;
        z-index: -1;
    }

    .container {
        background: transparent;
        backdrop-filter: none;
        border: none;
        border-radius: 0;
        padding: 2rem;
        margin: 0;
        box-shadow: none;
    }

    .btn {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        padding: 12px 24px;
        border-radius: 25px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            color: white;
        }

    .btn-success {
        background: linear-gradient(135deg, var(--success-green) 0%, #00a854 100%);
        border: none;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--amazon-orange) 0%, #ff7700 100%);
        border: none;
    }

    .btn-warning {
        background: linear-gradient(135deg, var(--warning-orange) 0%, #e67e22 100%);
        border: none;
    }

    .btn-danger {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        border: none;
    }

    .btn-info {
        background: linear-gradient(135deg, var(--info-blue) 0%, #0056b3 100%);
        border: none;
    }

    .form-control {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        padding: 12px 16px;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--amazon-orange);
            box-shadow: 0 0 0 3px rgba(255, 153, 0, 0.2);
            background: rgba(255, 255, 255, 0.15);
            color: white;
        }

        .form-control option {
            background: var(--amazon-dark);
            color: white;
        }

    .form-label {
        color: white;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .card-header {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        font-weight: 600;
    }

    .card-body {
        color: white;
    }

    /* Table Styling */
    .discounts-table-container {
        background: rgba(255, 255, 255, 0.12);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .discounts-table-container:hover {
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    .table {
        margin: 0;
        background: transparent;
        border: none;
        width: 100%;
    }

        .table thead {
            background: #131921; /* Same dark color as buttons */
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
        }

        .table th {
            color: #0073bb !important; /* Same blue color as edit button background */
            font-weight: 600;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 12px 16px;
            text-align: center;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border: none;
            position: relative;
            background: transparent;
        }

        /* Override any existing table header styles */
        .table thead th,
        .table thead tr th {
            color: #0073bb !important;
        }

        .table th::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 20%;
            right: 20%;
            height: 2px;
            background: linear-gradient(90deg, transparent, var(--amazon-orange), transparent);
            opacity: 0;
            transition: opacity 0.3s;
        }

        .table th:hover::after {
            opacity: 1;
        }

        .table td {
            color: white !important;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 12px 16px;
            vertical-align: middle;
            text-align: center;
            font-size: 0.9rem;
            border-left: none;
            border-right: none;
            position: relative;
            background: transparent;
        }

        .table tbody tr {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: none;
            background: transparent;
        }

            .table tbody tr:hover {
                background: rgba(255, 255, 255, 0.1);
                backdrop-filter: blur(10px);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 12px;
                transform: scale(1.01);
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            }

    /* Category name styling */
    .category-name {
        color: var(--amazon-orange) !important; /* Primary orange color */
        font-weight: 600;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .category-header td {
        color: var(--amazon-orange) !important; /* Primary orange color */
        font-weight: 700;
        font-size: 1rem;
        text-align: center;
        padding: 12px 16px;
        position: relative;
        background: transparent;
    }

    /* Action Buttons in Table */
    .action-btn {
        background: #131921; /* Dark navbar color */
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        padding: 8px 16px;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.85rem;
        margin: 0.25rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }

        .action-btn:hover {
            background: #232f3e; /* Slightly lighter on hover */
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            text-decoration: none;
        }

        .action-btn.edit {
            color: #0073bb !important; /* Professional blue for edit */
        }

            .action-btn.edit:hover {
                color: #005a8b !important; /* Darker blue on hover */
                background: #1a2532;
            }

        .action-btn.delete {
            color: #dc3545 !important; /* Professional red for delete */
        }

            .action-btn.delete:hover {
                color: #c82333 !important; /* Darker red on hover */
                background: #1a2532;
            }

    .badge {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

        .badge.bg-primary {
            background: linear-gradient(135deg, var(--amazon-orange) 0%, #ff7700 100%);
            border: none;
        }

        .badge.bg-success {
            background: linear-gradient(135deg, var(--success-green) 0%, #00a854 100%);
            border: none;
        }

        .badge.bg-warning {
            background: linear-gradient(135deg, var(--warning-orange) 0%, #e67e22 100%);
            border: none;
        }

        .badge.bg-danger {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            border: none;
        }

    .alert {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        color: white;
    }

    .alert-success {
        border-left: 4px solid var(--success-green);
    }

    .alert-danger {
        border-left: 4px solid #dc3545;
    }

    h1, h2, h3, h4, h5, h6 {
        color: white;
    }

    .text-muted {
        color: rgba(255, 255, 255, 0.7) !important;
    }

    strong {
        color: white !important;
    }

    span {
        color: white;
    }

    div {
        color: white;
    }

    p {
        color: white;
    }

    td {
        color: white !important;
    }

    th {
        color: white !important;
    }

    tr {
        color: white;
    }

    a {
        color: white;
    }

    label {
        color: white;
    }

    small {
        color: white;
    }

    i {
        color: white;
    }

    img {
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    hr {
        border-color: rgba(255, 255, 255, 0.2);
    }

    input {
        color: white;
    }

    select {
        color: white;
    }

    textarea {
        color: white;
    }

    button {
        color: white;
    }

    option {
        color: white;
    }

    li {
        color: white;
    }

    ul {
        color: white;
    }

    ol {
        color: white;
    }

    b {
        color: white;
    }

    em {
        color: white;
    }

    mark {
        color: white;
    }

    code {
        color: white;
    }

    pre {
        color: white;
    }

    kbd {
        color: white;
    }

    samp {
        color: white;
    }

    .table-dark {
        background: rgba(255, 255, 255, 0.15) !important;
        backdrop-filter: blur(10px);
    }

        .table-dark th {
            color: white !important;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }
    /* //pagination */
    .pagination {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 10px 20px;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }

    .page-item .page-link {
        background-color: rgba(255, 255, 255, 0.15);
        border: none;
        color: white;
        margin: 0 5px;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

        .page-item .page-link:hover {
            background-color: rgba(255, 255, 255, 0.25);
        }

    .page-item.active .page-link {
        background-color: rgba(255, 255, 255, 0.4);
        color: black;
        font-weight: bold;
    }

    .page-item.disabled .page-link {
        pointer-events: none;
        opacity: 0.4;
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 style="font-weight:800;letter-spacing:0.5px;margin-bottom:0;">My Discounts</h2>
        @if (!string.IsNullOrEmpty((string)ViewBag.CurrentSellerId))
        {
            <div class="mt-3 mb-2">
                <span style="font-weight:600;font-size:1.1em;">Seller ID:</span>
                <span class="badge bg-primary" style="font-size:1em;">@ViewBag.CurrentSellerId</span>
            </div>
        }
    </div>
    <div>
        <a asp-action="AddDiscount" class="btn btn-success" style="font-size:1.1em; padding:10px 24px;">Add New Discount</a>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@Html.AntiForgeryToken()
<form method="get" class="mb-4">
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0"><i class="fas fa-filter"></i> Filter Discounts</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3 mb-3">
                    <label for="searchDescription" class="form-label">Description</label>
                    <input type="text" id="searchDescription" name="searchDescription" value="@ViewBag.SearchDescription"
                           class="form-control" placeholder="Search by description..." />
                </div>
                <div class="col-md-2 mb-3">
                    <label for="discountType" class="form-label">Type</label>
                    <select id="discountType" name="discountType" class="form-control">
                        <option value="">All Types</option>
                        @if (ViewBag.DiscountType == "percentage")
                        {
                            <option value="percentage" selected="selected">Percentage</option>
                        }
                        else
                        {
                            <option value="percentage">Percentage</option>
                        }
                        @if (ViewBag.DiscountType == "fixed")
                        {
                            <option value="fixed" selected="selected">Fixed Amount</option>
                        }
                        else
                        {
                            <option value="fixed">Fixed Amount</option>
                        }
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label for="isActive" class="form-label">Status</label>
                    <select id="isActive" name="isActive" class="form-control">
                        <option value="">All Status</option>
                        @if (ViewBag.IsActive != null && ViewBag.IsActive.ToString() == "True")
                        {
                            <option value="true" selected="selected">Active</option>
                        }
                        else
                        {
                            <option value="true">Active</option>
                        }
                        @if (ViewBag.IsActive != null && ViewBag.IsActive.ToString() == "False")
                        {
                            <option value="false" selected="selected">Inactive</option>
                        }
                        else
                        {
                            <option value="false">Inactive</option>
                        }
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" name="startDate" value="@ViewBag.StartDate" class="form-control" />
                </div>
                <div class="col-md-2 mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" name="endDate" value="@ViewBag.EndDate" class="form-control" />
                </div>
                <div class="col-md-3 mb-3">
                    <label for="productId" class="form-label">Product</label>
                    <select id="productId" name="productId" class="form-control">
                        <option value="">All Products</option>
                        @foreach (var p in ViewBag.Products as List<Final_project.Models.product>)
                        {
                            if (ViewBag.ProductId == p.id)
                            {
                                <option value="@p.id" selected="selected">@p.name</option>
                            }
                            else
                            {
                                <option value="@p.id">@p.name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i> Filter
                        </button>
                        <a asp-action="Discounts" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i> Clear
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <strong>No discounts found!</strong>
        @if (!string.IsNullOrEmpty(ViewBag.SearchDescription) || !string.IsNullOrEmpty(ViewBag.DiscountType) || ViewBag.IsActive != null || !string.IsNullOrEmpty(ViewBag.StartDate) || !string.IsNullOrEmpty(ViewBag.EndDate) || !string.IsNullOrEmpty(ViewBag.ProductId))
        {
            <span>Try clearing the filters or <a asp-action="Discounts" class="alert-link">view all discounts</a>.</span>
        }
        else
        {
            <span>You haven't created any discounts yet. <a asp-action="AddDiscount" class="alert-link">Create your first discount</a>.</span>
        }
    </div>
}



@if (Model.Any())
{
    <div class="mb-2">
        <small class="text-muted">Showing @Model.Count() discount(s)</small>
    </div>
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Description</th>
            <th>Value</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
            <th>Products</th>
            <th>Discount Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var discount in Model)
        {
            <tr>
                <td>
                    @discount.description
                    @if (discount.discount_type == "platform")
                    {
                        <span class="badge bg-secondary ms-1">Platform</span>
                    }
                </td>
                <td>
                    @{
                        var discountType = discount.discount_type?.ToLower();
                    }
                    @if (discountType == "percentage")
                    {
                        <span class="badge bg-info">@discount.value%</span>
                    }
                    else if (discountType == "fixed")
                    {
                        <span class="badge bg-success">£@discount.value</span>
                    }
                    else
                    {
                        <span>@discount.value</span>
                    }
                </td>
                <td>@discount.start_date?.ToString("yyyy-MM-dd")</td>
                <td>@discount.end_date?.ToString("yyyy-MM-dd")</td>
                <td>
                    @if (discount.is_active == true)
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Inactive</span>
                    }
                </td>
                <td>
                    <div style="display:flex;flex-wrap:wrap;gap:6px;max-width:800px;overflow:hidden;text-overflow:ellipsis;white-space:normal;">
                        @foreach (var pd in discount.ProductDiscounts)
                        {
                            if (!string.IsNullOrEmpty(pd.product?.name))
                            {
                                <span class="badge bg-secondary" data-bs-toggle="tooltip" title="@pd.product.name" style="font-size:1em;">@pd.product.name</span>
                            }
                        }
                    </div>
                </td>
                <td>
                    @if (discount.discount_type?.ToLower() == "percentage")
                    {
                        <span class="badge bg-info">Percentage</span>
                    }
                    else if (discount.discount_type?.ToLower() == "fixed")
                    {
                        <span class="badge bg-success">Fixed</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">@discount.discount_type</span>
                    }
                </td>
                <td>
                    @if (discount.seller_id == ViewBag.CurrentSellerId)
                    {
                        <a asp-action="EditDiscount" asp-route-id="@discount.id" class="btn btn-sm btn-primary me-1">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <button type="button" class="btn btn-sm btn-danger me-1 delete-discount-btn" data-discount-id="@discount.id">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                        <button type="button" class="btn btn-sm @(discount.is_active == true ? "btn-warning" : "btn-success") toggle-discount-btn"
                                data-discount-id="@discount.id" data-current-status="@discount.is_active.ToString().ToLower()">
                            <i class="fas @(discount.is_active == true ? "fa-ban" : "fa-check")"></i> @(discount.is_active == true ? "Deactivate" : "Activate")
                        </button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@* -----------------pagination---------------- *@
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">

        @* ? Always visible, but disabled if no previous page *@
        <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
            <a class="page-link" href="@(
                ViewBag.CurrentPage > 1
                    ? Url.Action("Discounts", new {
                        page = ViewBag.CurrentPage - 1,
                        searchName = ViewBag.SearchName,
                        minPrice = ViewBag.MinPrice,
                        maxPrice = ViewBag.MaxPrice,
                        categoryId = ViewBag.SelectedCategoryId
                    })
                    : "#")">
                &#x276E;
            </a>
        </li>

        @* Page numbers *@
        @for (int i = 1; i <= ViewBag.totalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Discounts", new {
                    page = i,
                    searchName = ViewBag.SearchName,
                    minPrice = ViewBag.MinPrice,
                    maxPrice = ViewBag.MaxPrice,
                    categoryId = ViewBag.SelectedCategoryId
                })">@i</a>
            </li>
        }

        @* ? Always visible, but disabled if no next page *@
        <li class="page-item @(ViewBag.CurrentPage >= ViewBag.totalPages ? "disabled" : "")">
            <a class="page-link" href="@(
                ViewBag.CurrentPage < ViewBag.totalPages
                    ? Url.Action("Discounts", new {
                        page = ViewBag.CurrentPage + 1,
                        searchName = ViewBag.SearchName,
                        minPrice = ViewBag.MinPrice,
                        maxPrice = ViewBag.MaxPrice,
                        categoryId = ViewBag.SelectedCategoryId
                    })
                    : "#")">&#x276F;</a> @* ? *@
        </li>

    </ul>
</nav>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 5000);

            // Handle alert close button
            $('.alert .btn-close').on('click', function() {
                $(this).closest('.alert').fadeOut('slow');
            });

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });


            $('.delete-discount-btn').click(function(e) {
                e.preventDefault();
                var discountId = $(this).data('discount-id');
                $('#confirmDeleteModal').data('discount-id', discountId).modal('show');
            });
            $('#confirmDeleteBtn').click(function() {
                var discountId = $('#confirmDeleteModal').data('discount-id');
                var form = $('<form method="post" action="/Seller/DeleteDiscount">' +
                    '<input type="hidden" name="id" value="' + discountId + '">' +
                    '<input type="hidden" name="__RequestVerificationToken" value="' + $('input[name="__RequestVerificationToken"]').val() + '">' +
                    '</form>');
                $('body').append(form);
                form.submit();
            });


            $('.toggle-discount-btn').click(function(e) {
                e.preventDefault();
                var button = $(this);
                var discountId = button.data('discount-id');
                var currentStatus = button.data('current-status');
                $('#confirmToggleModal').data('discount-id', discountId).data('button', button).data('current-status', currentStatus).modal('show');
            });
            $('#confirmToggleBtn').click(function() {
                var discountId = $('#confirmToggleModal').data('discount-id');
                var button = $('#confirmToggleModal').data('button');
                var currentStatus = $('#confirmToggleModal').data('current-status');

                var originalText = button.text();
                button.prop('disabled', true).text('Updating...');
                $.ajax({
                    url: '/Seller/ToggleDiscountActive',
                    type: 'POST',
                    data: { id: discountId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {

                        if (currentStatus === 'true') {
                            button.removeClass('btn-warning').addClass('btn-success')
                                .html('<i class="fas fa-check"></i> Activate').data('current-status', 'false');
                        } else {
                            button.removeClass('btn-success').addClass('btn-warning')
                                .html('<i class="fas fa-ban"></i> Deactivate').data('current-status', 'true');
                        }

                        var statusCell = button.closest('tr').find('td:nth-child(5)');
                        if (currentStatus === 'true') {
                            statusCell.html('<span class="badge bg-danger">Inactive</span>');
                        } else {
                            statusCell.html('<span class="badge bg-success">Active</span>');
                        }
                        showNotification('Discount status updated successfully!', 'success');
                    },
                    error: function() {
                        button.prop('disabled', false).text(originalText);
                        showNotification('Error updating discount status!', 'error');
                    },
                    complete: function() {
                        button.prop('disabled', false);
                    }
                });
                $('#confirmToggleModal').modal('hide');
            });


            function showNotification(message, type) {
                var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                var notification = $('<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert">' +
                    message +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                    '</div>');
                $('h2').after(notification);
                setTimeout(function() {
                    notification.fadeOut();
                }, 3000);
            }
        });
    </script>

    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this discount?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="confirmToggleModal" tabindex="-1" aria-labelledby="confirmToggleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmToggleModalLabel">Confirm Status Change</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to change the status of this discount?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-warning" id="confirmToggleBtn">Yes, Change Status</button>
                </div>
            </div>
        </div>
    </div>
} 